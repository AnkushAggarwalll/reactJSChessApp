{"version":3,"sources":["components/tile/Tile.js","constants.js","rules/rule.helpers.js","rules/rules.js","components/chessBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","number","className","image","style","backgroundImage","VERTICAL_AXIS","HORIZONTAL_AXIS","GRID_SIZE","samePosition","p1","p2","x","y","initialstate","position","type","team","Helper","pieces","this","isTileOccupied","isTileOccupiedByOpponent","find","pi","initialPosition","desiredPosition","piecesState","specialRow","pawnDirection","isTileEmptyOrEnemy","i","passedPosition","Xaxis","Yaxis","console","log","direction","Rules","piece","enPassant","helpers","validMove","pawnMove","kinghtMove","bishopMove","rookMove","queenMove","kingMove","Chessboard","board","useState","setPieces","grabPosition","setGrabPosition","chessboardRef","useRef","active","setActive","rules","j","undefined","push","length","onMouseDown","e","element","target","chessboard","current","includes","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","left","top","grabPiece","ref","onMouseMove","minX","minY","maxX","clientWidth","maxY","clientHeight","pageX","pageY","movePiece","onMouseUp","currentPiece","isValidMove","isEnPassanrMove","updatedPieces","reduce","results","removeProperty","dropPiece","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEe,SAASA,EAAKC,GAEzB,OAAGA,EAAMC,OAAO,GAAG,EACR,qBAAKC,UAAU,kBAAf,SAAkCF,EAAMG,OAAO,qBAAMC,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMG,MAAd,MAAyBD,UAAU,kBAG/G,qBAAKA,UAAU,kBAAf,SAAkCF,EAAMG,OAAO,qBAAMC,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMG,MAAd,MAAyBD,UAAU,kB,kBCRjHI,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpDC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtDC,EAAY,IAClB,SAASC,EAAaC,EAAGC,GAC5B,OAAOD,EAAGE,IAAMD,EAAGC,GAAKF,EAAGG,IAAMF,EAAGE,EAEjC,IAAMC,EAAc,CACzB,CACEX,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,yBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,QACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAGR,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,yBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,QACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,O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","file":"static/js/main.bd128679.chunk.js","sourcesContent":["import './Tile.css';\r\n\r\nexport default function Tile(props){\r\n\r\n    if(props.number%2==0){\r\n        return(<div className=\"tile black-tile\">{props.image&&<div  style={{backgroundImage:`url(${props.image})`}} className='chess-piece'></div>}</div>)\r\n    }\r\n    else{\r\n        return(<div className=\"tile white-tile\">{props.image&&<div  style={{backgroundImage:`url(${props.image})`}} className='chess-piece'></div>}</div>)\r\n    }\r\n\r\n}","export const VERTICAL_AXIS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\nexport const HORIZONTAL_AXIS = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\nexport const GRID_SIZE = 100;\r\nexport function samePosition(p1,p2){\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\nexport const initialstate= [\r\n  {\r\n    image: `assets/black_castle.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 7,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_knight.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 7,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_bishop.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 7,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_queen.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 7,\r\n    },\r\n    type: \"QUEEN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_king.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 7,\r\n    },\r\n    type: \"KING\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_bishop.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 7,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_knight.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 7,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_castle.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 7,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n\r\n  {\r\n    image: `assets/white_castle.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_knight.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 0,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_bishop.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 0,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_queen.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 0,\r\n    },\r\n    type: \"QUEEN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_king.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 0,\r\n    },\r\n    type: \"KING\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_bishop.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 0,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_knight.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 0,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_castle.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 0,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n];","import { samePosition } from \"../constants\";\r\n\r\nexport class Helper {\r\n\r\n    isTileEmptyOrEnemy(position, pieces, team) {\r\n        return !this.isTileOccupied(position, pieces) || this.isTileOccupiedByOpponent(position, pieces, team);\r\n    }\r\n\r\n    isTileOccupied(position, pieces) {\r\n        let piece = pieces.find((pi) => samePosition(pi.position, { x: position.x, y: position.y }));\r\n        if (piece)\r\n            return true;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    isTileOccupiedByOpponent(position, pieces, team) {\r\n        let piece = pieces.find((pi) => samePosition(pi.position, { x: position.x, y: position.y }) && pi.team !== team);\r\n        if (piece)\r\n            return true;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    pawnMove(initialPosition, desiredPosition, team, piecesState) {\r\n        const specialRow = team === \"HOME\" ? 1 : 6;\r\n        const pawnDirection = team === \"HOME\" ? 1 : -1;\r\n        if (initialPosition.x === desiredPosition.x && initialPosition.y === specialRow && desiredPosition.y - initialPosition.y === 2 * pawnDirection) {\r\n            if (!this.isTileOccupied(desiredPosition, piecesState) && !this.isTileOccupied({ x: desiredPosition.x, y: desiredPosition.y - pawnDirection }, piecesState))\r\n                return true;\r\n        }\r\n        else if (initialPosition.x === desiredPosition.x && desiredPosition.y - initialPosition.y === pawnDirection) {\r\n            if (!this.isTileOccupied(desiredPosition, piecesState))\r\n                return true;\r\n        }\r\n        else if (desiredPosition.x - initialPosition.x === -1 && desiredPosition.y - initialPosition.y === pawnDirection) {\r\n\r\n            if (this.isTileOccupiedByOpponent(desiredPosition, piecesState, team))\r\n                return true;\r\n        }\r\n        else if (desiredPosition.x - initialPosition.x === 1 && desiredPosition.y - initialPosition.y === pawnDirection) {\r\n\r\n            if (this.isTileOccupiedByOpponent(desiredPosition, piecesState, team))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    kinghtMove(initialPosition, desiredPosition, team, piecesState) {\r\n\r\n        if ((desiredPosition.x - initialPosition.x === -1 || desiredPosition.x - initialPosition.x === 1) && (desiredPosition.y - initialPosition.y === 2 || desiredPosition.y - initialPosition.y === -2)) {\r\n            if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                return true;\r\n        }\r\n        else if ((desiredPosition.x - initialPosition.x === 2 || desiredPosition.x - initialPosition.x === -2) && (desiredPosition.y - initialPosition.y === 1 || desiredPosition.y - initialPosition.y === -1)) {\r\n            if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    bishopMove(initialPosition, desiredPosition, team, piecesState) {\r\n\r\n        for (let i = 1; i < 8; i++) {\r\n            if (desiredPosition.x > initialPosition.x && desiredPosition.y > initialPosition.y) {\r\n                let passedPosition = { x: initialPosition.x + i, y: initialPosition.y + i };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(passedPosition, piecesState, team)) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            } else if (desiredPosition.x < initialPosition.x && desiredPosition.y > initialPosition.y) {\r\n                let passedPosition = { x: initialPosition.x - i, y: initialPosition.y + i };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(passedPosition, piecesState, team)) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            } else if (desiredPosition.x < initialPosition.x && desiredPosition.y < initialPosition.y) {\r\n                let passedPosition = { x: initialPosition.x - i, y: initialPosition.y - i };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(passedPosition, piecesState, team)) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            } else if (desiredPosition.x > initialPosition.x && desiredPosition.y < initialPosition.y) {\r\n                let passedPosition = { x: initialPosition.x + i, y: initialPosition.y - i };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(passedPosition, piecesState, team)) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    kingMove(initialPosition, desiredPosition, team, piecesState) {\r\n        let Xaxis = (desiredPosition.x < initialPosition.x) ? -1 : (desiredPosition.x > initialPosition.x) ? 1 : 0;\r\n        let Yaxis = (desiredPosition.y < initialPosition.y) ? -1 : (desiredPosition.y > initialPosition.y) ? 1 : 0;\r\n            let passedPosition = { x: initialPosition.x + Xaxis, y: initialPosition.y + Yaxis};\r\n                console.log(passedPosition);\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                        return true;\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                    return false\r\n                }\r\n        return false;\r\n    }\r\n    queenMove(initialPosition, desiredPosition, team, piecesState) {\r\n        for (let i = 1; i < 8; i++) {\r\n            let Xaxis = (desiredPosition.x < initialPosition.x) ? -1 : (desiredPosition.x > initialPosition.x) ? 1 : 0;\r\n            let Yaxis = (desiredPosition.y < initialPosition.y) ? -1 : (desiredPosition.y > initialPosition.y) ? 1 : 0;\r\n                let passedPosition = { x: initialPosition.x + (i * Xaxis), y: initialPosition.y + (i * Yaxis) };\r\n            console.log(passedPosition);\r\n            if (samePosition(passedPosition, desiredPosition)) {\r\n                if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                    return true;\r\n            } else {\r\n                if (this.isTileOccupied(passedPosition, piecesState))\r\n                    break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    rookMove(initialPosition, desiredPosition, team, piecesState) {\r\n        if (desiredPosition.x === initialPosition.x) {\r\n            for (let i = 1; i < 8; i++) {\r\n                let direction = (desiredPosition.y > initialPosition.y) ? 1 : -1;\r\n                let passedPosition = { x: initialPosition.x, y: initialPosition.y + (i * direction) };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                        return true;\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        if (desiredPosition.y === initialPosition.y) {\r\n            for (let i = 1; i < 8; i++) {\r\n                let direction = (desiredPosition.x > initialPosition.x) ? 1 : -1;\r\n                let passedPosition = { x: initialPosition.x + (i * direction), y: initialPosition.y };\r\n                if (samePosition(passedPosition, desiredPosition)) {\r\n                    if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                        return true;\r\n                } else {\r\n                    if (this.isTileOccupied(passedPosition, piecesState))\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { samePosition } from \"../constants\";\r\nimport { Helper } from \"./rule.helpers\";\r\n\r\nexport default class Rules {\r\n\r\n    isEnPassanrMove(initialPosition, desiredPosition, type, team, piecesState) {\r\n        const pawnDirection = team === \"HOME\" ? 1 : -1;\r\n        if (type === \"PAWN\") {\r\n            if ((desiredPosition.x - initialPosition.x === - 1 || desiredPosition.x - initialPosition.x === 1) && desiredPosition.y - initialPosition.y === pawnDirection) {\r\n                const piece = piecesState.find(piece => samePosition(piece.position, { x: desiredPosition.x, y: desiredPosition.y - pawnDirection }) && piece.enPassant);\r\n                if (piece)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isValidMove(initialPosition, desiredPosition, type, team, piecesState) {\r\n        let helpers = new Helper()\r\n        let validMove =false;\r\n        switch(type){\r\n            case 'PAWN':\r\n                validMove = helpers.pawnMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n            case \"KNIGHT\":\r\n                validMove = helpers.kinghtMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n            case \"BISHOP\":\r\n                validMove = helpers.bishopMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n            case \"CASTLE\":\r\n                validMove = helpers.rookMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n            case \"QUEEN\":\r\n                validMove = helpers.queenMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n            case \"KING\":\r\n                validMove = helpers.kingMove(initialPosition,desiredPosition,team,piecesState);\r\n                break;\r\n        }\r\n        return validMove;\r\n    }\r\n}","import { useRef, useState } from 'react';\r\nimport './chessboard.css';\r\nimport Tile from \"./tile/Tile\";\r\nimport Rules from '../rules/rules'\r\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE, initialstate, samePosition } from '../constants'\r\n\r\nfunction Chessboard(props) {\r\n    var board = [];\r\n    const [pieces, setPieces] = useState(initialstate);\r\n    const [grabPosition, setGrabPosition] = useState(null);\r\n    const chessboardRef = useRef(null);\r\n    const [active, setActive] = useState(null);\r\n    const rules = new Rules();\r\n\r\n    const grabPiece = (e) => {\r\n        let element = e.target;\r\n        let chessboard = chessboardRef.current;\r\n        if (e.target.className.includes('chess-piece')) {\r\n            setGrabPosition({ x: Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE), y: Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE)) });\r\n            let x = e.clientX - GRID_SIZE / 2;\r\n            let y = e.clientY - GRID_SIZE / 2;\r\n            element.style.position = \"absolute\";\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            setActive(element);\r\n        }\r\n    }\r\n\r\n    const movePiece = (e) => {\r\n        let element = e.target;\r\n        const chessboard = chessboardRef.current;\r\n        if (active && active.className.includes('chess-piece')) {\r\n            let minX = chessboard.offsetLeft;\r\n            let minY = chessboard.offsetTop;\r\n            let maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\r\n            let maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\r\n            let x = e.pageX - 50;\r\n            let y = e.pageY - 50;\r\n            active.style.position = \"absolute\";\r\n            if (x < minX) {\r\n                active.style.left = `${minX}px`;\r\n            }\r\n            else if (x > maxX) {\r\n                active.style.left = `${maxX}px`;\r\n            }\r\n            else {\r\n                active.style.left = `${x}px`;\r\n            }\r\n            if (y < minY) {\r\n                active.style.top = `${minY}px`;\r\n            }\r\n            else if (y > maxY) {\r\n                active.style.top = `${maxY}px`;\r\n            }\r\n            else {\r\n                active.style.top = `${y}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPiece = (e) => {\r\n        const chessboard = chessboardRef.current;\r\n        if (active && chessboard) {\r\n            let x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\r\n            let y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\r\n            const currentPiece = pieces.find((piece) => samePosition(piece.position, grabPosition));\r\n            const pawnDirection = currentPiece.team === \"HOME\" ? 1 : -1;\r\n\r\n            if (currentPiece) {\r\n                const validMove = rules.isValidMove(grabPosition, {x,y}, currentPiece.type, currentPiece.team, pieces);\r\n                const isEnPassantMove = rules.isEnPassanrMove(grabPosition, {x, y}, currentPiece.type, currentPiece.team, pieces);\r\n                if (isEnPassantMove) {\r\n                    let updatedPieces = pieces.reduce((results, piece) => {\r\n                        if (samePosition(piece.position, grabPosition)) {\r\n                            piece.enPassant = false;\r\n                            piece.position.x = x;\r\n                            piece.position.y = y;\r\n                            results.push(piece);\r\n                        } else if (!(samePosition(piece.position, { x, y: y - pawnDirection }))) {\r\n                            if (piece.type == \"PAWN\")\r\n                                piece.enPassant = false\r\n                            results.push(piece);\r\n                        }\r\n                        return results;\r\n                    }, []);\r\n\r\n                    setPieces(updatedPieces);\r\n                }\r\n                else if (validMove) {\r\n                    let updatedPieces = pieces.reduce((results, piece) => {\r\n                        if (samePosition(piece.position, grabPosition)) {\r\n                            piece.enPassant =Math.abs(grabPosition.y - y) == 2 && piece.type == \"PAWN\"\r\n                            piece.position.x = x;\r\n                            piece.position.y = y;\r\n                            results.push(piece);\r\n                        } else if (!(samePosition(piece.position, { x, y }))) {\r\n                            if (piece.type == \"PAWN\")\r\n                                piece.enPassant = false\r\n                            results.push(piece);\r\n                        }\r\n                        return results;\r\n                    }, []);\r\n                    setPieces(updatedPieces);\r\n                }\r\n                else {\r\n                    active.style.position = \"relative\";\r\n                    active.style.removeProperty('left');\r\n                    active.style.removeProperty('top');\r\n                }\r\n\r\n            }\r\n            setActive(null)\r\n        }\r\n    }\r\n\r\n    for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\r\n        for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\r\n            let piece = pieces.find((piece) =>  samePosition(piece.position,{x:i,y:j}))\r\n            let image = piece ? piece.image : undefined;\r\n            board.push(<Tile key={`${VERTICAL_AXIS[j]}${HORIZONTAL_AXIS[i]}`} number={i + j} image={image} />)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"chessboard\" onMouseDown={e => grabPiece(e)} ref={chessboardRef} onMouseMove={e => movePiece(e)} onMouseUp={e => { dropPiece(e) }}>{board}</div>\r\n    )\r\n}\r\n\r\nexport default Chessboard;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Chessboard from './components/chessBoard';\nfunction App() {\n\n\n  return (\n      \n      <div className=\"app\"><Chessboard /></div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}