{"version":3,"sources":["components/tile/Tile.js","constants.js","rules/rules.js","components/chessBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","number","className","image","style","backgroundImage","VERTICAL_AXIS","HORIZONTAL_AXIS","GRID_SIZE","samePosition","p1","p2","x","y","initialstate","position","type","team","Rules","pieces","this","isTileOccupied","isTileOccupiedByOpponent","find","pi","initialPosition","desiredPosition","piecesState","pawnDirection","piece","enPassant","specialRow","isTileEmptyOrEnemy","i","passedPosition","console","log","Chessboard","board","useState","setPieces","grabPosition","setGrabPosition","chessboardRef","useRef","active","setActive","rules","j","undefined","push","length","onMouseDown","e","element","target","chessboard","current","includes","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","left","top","grabPiece","ref","onMouseMove","minX","minY","maxX","clientWidth","maxY","clientHeight","pageX","pageY","movePiece","onMouseUp","currentPiece","validMove","isValidMove","isEnPassanrMove","updatedPieces","reduce","results","removeProperty","dropPiece","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEe,SAASA,EAAKC,GAEzB,OAAGA,EAAMC,OAAO,GAAG,EACR,qBAAKC,UAAU,kBAAf,SAAkCF,EAAMG,OAAO,qBAAMC,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMG,MAAd,MAAyBD,UAAU,kBAG/G,qBAAKA,UAAU,kBAAf,SAAkCF,EAAMG,OAAO,qBAAMC,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMG,MAAd,MAAyBD,UAAU,kB,kBCRjHI,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpDC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtDC,EAAY,IAClB,SAASC,EAAaC,EAAGC,GAC5B,OAAOD,EAAGE,IAAMD,EAAGC,GAAKF,EAAGG,IAAMF,EAAGE,EAEjC,IAAMC,EAAc,CACzB,CACEX,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,yBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,QACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,YAGR,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,yBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,QACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,0BACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,SACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,OACNC,KAAM,QAER,CACEd,MAAM,wBACNY,SAAU,CACRH,EAAG,EACHC,EAAG,GAELG,KAAM,O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","file":"static/js/main.c802c158.chunk.js","sourcesContent":["import './Tile.css';\r\n\r\nexport default function Tile(props){\r\n\r\n    if(props.number%2==0){\r\n        return(<div className=\"tile black-tile\">{props.image&&<div  style={{backgroundImage:`url(${props.image})`}} className='chess-piece'></div>}</div>)\r\n    }\r\n    else{\r\n        return(<div className=\"tile white-tile\">{props.image&&<div  style={{backgroundImage:`url(${props.image})`}} className='chess-piece'></div>}</div>)\r\n    }\r\n\r\n}","export const VERTICAL_AXIS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\nexport const HORIZONTAL_AXIS = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\nexport const GRID_SIZE = 100;\r\nexport function samePosition(p1,p2){\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\nexport const initialstate= [\r\n  {\r\n    image: `assets/black_castle.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 7,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_knight.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 3,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_bishop.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 7,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_queen.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 7,\r\n    },\r\n    type: \"QUEEN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_king.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 7,\r\n    },\r\n    type: \"KING\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_bishop.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 7,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_knight.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 7,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_castle.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 7,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n  {\r\n    image: `assets/black_pawn.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 6,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"OPPONENT\",\r\n  },\r\n\r\n  {\r\n    image: `assets/white_castle.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_knight.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 0,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_bishop.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 0,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_queen.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 0,\r\n    },\r\n    type: \"QUEEN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_king.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 0,\r\n    },\r\n    type: \"KING\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_bishop.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 0,\r\n    },\r\n    type: \"BISHOP\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_knight.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 0,\r\n    },\r\n    type: \"KNIGHT\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_castle.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 0,\r\n    },\r\n    type: \"CASTLE\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 0,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 1,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 2,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 3,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 4,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 5,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 6,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n  {\r\n    image: `assets/white_pawn.png`,\r\n    position: {\r\n      x: 7,\r\n      y: 1,\r\n    },\r\n    type: \"PAWN\",\r\n    team: \"HOME\",\r\n  },\r\n];","import { samePosition } from \"../constants\";\r\n\r\nexport default class Rules {\r\n\r\n    isTileEmptyOrEnemy(position, pieces, team) {\r\n        return !this.isTileOccupied(position, pieces) || this.isTileOccupiedByOpponent(position, pieces, team);\r\n    }\r\n\r\n    isTileOccupied(position, pieces) {\r\n        let piece = pieces.find((pi) => samePosition(pi.position, { x: position.x, y: position.y }));\r\n        if (piece)\r\n            return true;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    isTileOccupiedByOpponent(position, pieces, team) {\r\n        let piece = pieces.find((pi) => samePosition(pi.position, { x: position.x, y: position.y }) && pi.team != team);\r\n        if (piece)\r\n            return true;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    isEnPassanrMove(initialPosition, desiredPosition, type, team, piecesState) {\r\n        const pawnDirection = team === \"HOME\" ? 1 : -1;\r\n        if (type == \"PAWN\") {\r\n            if ((desiredPosition.x - initialPosition.x == - 1 || desiredPosition.x - initialPosition.x == 1) && desiredPosition.y - initialPosition.y == pawnDirection) {\r\n                const piece = piecesState.find(piece => samePosition(piece.position, { x: desiredPosition.x, y: desiredPosition.y - pawnDirection }) && piece.enPassant);\r\n                if (piece)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isValidMove(initialPosition, desiredPosition, type, team, piecesState) {\r\n        const specialRow = team === \"HOME\" ? 1 : 6;\r\n        const pawnDirection = team === \"HOME\" ? 1 : -1;\r\n        if (type == \"PAWN\") {\r\n            if (initialPosition.x == desiredPosition.x && initialPosition.y == specialRow && desiredPosition.y - initialPosition.y == 2 * pawnDirection) {\r\n                if (!this.isTileOccupied(desiredPosition, piecesState) && !this.isTileOccupied({ x: desiredPosition.x, y: desiredPosition.y - pawnDirection }, piecesState))\r\n                    return true;\r\n            }\r\n            else if (initialPosition.x == desiredPosition.x && desiredPosition.y - initialPosition.y == pawnDirection) {\r\n                if (!this.isTileOccupied(desiredPosition, piecesState))\r\n                    return true;\r\n            }\r\n            else if (desiredPosition.x - initialPosition.x == -1 && desiredPosition.y - initialPosition.y == pawnDirection) {\r\n\r\n                if (this.isTileOccupiedByOpponent(desiredPosition, piecesState, team))\r\n                    return true;\r\n            }\r\n            else if (desiredPosition.x - initialPosition.x == 1 && desiredPosition.y - initialPosition.y == pawnDirection) {\r\n\r\n                if (this.isTileOccupiedByOpponent(desiredPosition, piecesState, team))\r\n                    return true;\r\n            }\r\n        } else if (type == \"KNIGHT\") {\r\n            if ((desiredPosition.x - initialPosition.x == -1 || desiredPosition.x - initialPosition.x == 1) && (desiredPosition.y - initialPosition.y == 2 || desiredPosition.y - initialPosition.y == -2)) {\r\n                if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                    return true;\r\n            }\r\n            else if ((desiredPosition.x - initialPosition.x == 2 || desiredPosition.x - initialPosition.x == -2) && (desiredPosition.y - initialPosition.y == 1 || desiredPosition.y - initialPosition.y == -1)) {\r\n                if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                    return true;\r\n            }\r\n        } else if (type == \"BISHOP\") {\r\n            for (let i = 1; i < 8; i++) {\r\n                if (desiredPosition.x > initialPosition.x && desiredPosition.y > initialPosition.y) {\r\n                    let passedPosition = { x: initialPosition.x + i, y: initialPosition.y + i };\r\n                    if (this.isTileOccupied(passedPosition, piecesState)) {\r\n                        console.log(\"illlegal move\");\r\n                        break;\r\n                    }\r\n                } else if (desiredPosition.x < initialPosition.x && desiredPosition.y > initialPosition.y) {\r\n                    let passedPosition = { x: initialPosition.x - i, y: initialPosition.y + i };\r\n                    if (this.isTileOccupied(passedPosition, piecesState)) {\r\n                        console.log(\"illlegal move\");\r\n                        break;\r\n                    }\r\n                }else if (desiredPosition.x < initialPosition.x && desiredPosition.y < initialPosition.y) {\r\n                    let passedPosition = { x: initialPosition.x - i, y: initialPosition.y - i };\r\n                    if (this.isTileOccupied(passedPosition, piecesState)) {\r\n                        console.log(\"illlegal move\");\r\n                        break;\r\n                    }\r\n                }else if (desiredPosition.x > initialPosition.x && desiredPosition.y < initialPosition.y) {\r\n                    let passedPosition = { x: initialPosition.x + i, y: initialPosition.y - i };\r\n                    if (this.isTileOccupied(passedPosition, piecesState)) {\r\n                        console.log(\"illlegal move\");\r\n                        break;\r\n                    }\r\n                }\r\n                if ((desiredPosition.x - initialPosition.x == i || desiredPosition.x - initialPosition.x == -i) && (desiredPosition.y - initialPosition.y == i || desiredPosition.y - initialPosition.y == -i)) {\r\n                    if (this.isTileEmptyOrEnemy(desiredPosition, piecesState, team))\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { useRef, useState } from 'react';\r\nimport './chessboard.css';\r\nimport Tile from \"./tile/Tile\";\r\nimport Rules from '../rules/rules'\r\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE, initialstate, samePosition } from '../constants'\r\n\r\nfunction Chessboard(props) {\r\n    var board = [];\r\n    const [pieces, setPieces] = useState(initialstate);\r\n    const [grabPosition, setGrabPosition] = useState(null);\r\n    const chessboardRef = useRef(null);\r\n    const [active, setActive] = useState(null);\r\n    const rules = new Rules();\r\n\r\n    const grabPiece = (e) => {\r\n        let element = e.target;\r\n        let chessboard = chessboardRef.current;\r\n        if (e.target.className.includes('chess-piece')) {\r\n            setGrabPosition({ x: Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE), y: Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE)) });\r\n            let x = e.clientX - GRID_SIZE / 2;\r\n            let y = e.clientY - GRID_SIZE / 2;\r\n            element.style.position = \"absolute\";\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            setActive(element);\r\n        }\r\n    }\r\n\r\n    const movePiece = (e) => {\r\n        let element = e.target;\r\n        const chessboard = chessboardRef.current;\r\n        if (active && active.className.includes('chess-piece')) {\r\n            let minX = chessboard.offsetLeft;\r\n            let minY = chessboard.offsetTop;\r\n            let maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\r\n            let maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\r\n            let x = e.pageX - 50;\r\n            let y = e.pageY - 50;\r\n            active.style.position = \"absolute\";\r\n            if (x < minX) {\r\n                active.style.left = `${minX}px`;\r\n            }\r\n            else if (x > maxX) {\r\n                active.style.left = `${maxX}px`;\r\n            }\r\n            else {\r\n                active.style.left = `${x}px`;\r\n            }\r\n            if (y < minY) {\r\n                active.style.top = `${minY}px`;\r\n            }\r\n            else if (y > maxY) {\r\n                active.style.top = `${maxY}px`;\r\n            }\r\n            else {\r\n                active.style.top = `${y}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPiece = (e) => {\r\n        const chessboard = chessboardRef.current;\r\n        if (active && chessboard) {\r\n            let x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\r\n            let y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\r\n            const currentPiece = pieces.find((piece) => samePosition(piece.position, grabPosition));\r\n            const pawnDirection = currentPiece.team === \"HOME\" ? 1 : -1;\r\n\r\n            if (currentPiece) {\r\n                const validMove = rules.isValidMove(grabPosition, {x,y}, currentPiece.type, currentPiece.team, pieces);\r\n                const isEnPassantMove = rules.isEnPassanrMove(grabPosition, {x, y}, currentPiece.type, currentPiece.team, pieces);\r\n                if (isEnPassantMove) {\r\n                    let updatedPieces = pieces.reduce((results, piece) => {\r\n                        if (samePosition(piece.position, grabPosition)) {\r\n                            piece.enPassant = false;\r\n                            piece.position.x = x;\r\n                            piece.position.y = y;\r\n                            results.push(piece);\r\n                        } else if (!(samePosition(piece.position, { x, y: y - pawnDirection }))) {\r\n                            if (piece.type == \"PAWN\")\r\n                                piece.enPassant = false\r\n                            results.push(piece);\r\n                        }\r\n                        return results;\r\n                    }, []);\r\n\r\n                    setPieces(updatedPieces);\r\n                }\r\n                else if (validMove) {\r\n                    let updatedPieces = pieces.reduce((results, piece) => {\r\n                        if (samePosition(piece.position, grabPosition)) {\r\n                            piece.enPassant =Math.abs(grabPosition.y - y) == 2 && piece.type == \"PAWN\"\r\n                            piece.position.x = x;\r\n                            piece.position.y = y;\r\n                            results.push(piece);\r\n                        } else if (!(samePosition(piece.position, { x, y }))) {\r\n                            if (piece.type == \"PAWN\")\r\n                                piece.enPassant = false\r\n                            results.push(piece);\r\n                        }\r\n                        return results;\r\n                    }, []);\r\n                    setPieces(updatedPieces);\r\n                }\r\n                else {\r\n                    active.style.position = \"relative\";\r\n                    active.style.removeProperty('left');\r\n                    active.style.removeProperty('top');\r\n                }\r\n\r\n            }\r\n            setActive(null)\r\n        }\r\n    }\r\n\r\n    for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\r\n        for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\r\n            let piece = pieces.find((piece) =>  samePosition(piece.position,{x:i,y:j}))\r\n            let image = piece ? piece.image : undefined;\r\n            board.push(<Tile key={`${VERTICAL_AXIS[j]}${HORIZONTAL_AXIS[i]}`} number={i + j} image={image} />)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"chessboard\" onMouseDown={e => grabPiece(e)} ref={chessboardRef} onMouseMove={e => movePiece(e)} onMouseUp={e => { dropPiece(e) }}>{board}</div>\r\n    )\r\n}\r\n\r\nexport default Chessboard;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Chessboard from './components/chessBoard';\nfunction App() {\n\n\n  return (\n      \n      <div className=\"app\"><Chessboard /></div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}